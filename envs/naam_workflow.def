Bootstrap: docker
From: continuumio/miniconda3

%files
    # Relative paths from where you run 'singularity build'
    ../envs/naam.tar.gz /naam.tar.gz
    ../python/amplicon_project.py /amplicon_project.py
    ../workflows/snakefile_naam.smk /snakefile_naam.smk
    ../r/viz_nextclade_cli.R /viz_nextclade_cli.R
    ../configs/virus_config.yaml /virus_config.yaml
    NAAM_VERSION /NAAM_VERSION


%post
    # Define the target environment path using the standard container location
    TARGET_ENV_PATH="/opt/conda/envs/naam"

    # Verbose output and exit on error - good for debugging builds
    set -ex

    echo "--- Creating target directory: ${TARGET_ENV_PATH} ---"
    mkdir -p "${TARGET_ENV_PATH}"
    ls -ld /opt/conda/ /opt/conda/envs/ # Verify parent exists

    echo "--- Extracting tarball /naam.tar.gz to ${TARGET_ENV_PATH} ---"
    tar -xzf /naam.tar.gz -C "${TARGET_ENV_PATH}"
    echo "--- Contents of target directory after tar: ---"
    ls -l "${TARGET_ENV_PATH}"

    echo "--- Running conda-unpack using Python from the unpacked env ---"
    "${TARGET_ENV_PATH}/bin/python" "${TARGET_ENV_PATH}/bin/conda-unpack"
    echo "--- conda-unpack finished ---"

    echo "--- Cleaning up tarball ---"
    rm /naam.tar.gz

    # --- Modify /etc/bash.bashrc for interactive shells ---
    echo "--- Adding conda activation to /etc/bash.bashrc ---"
    # Use cat with a here-document to append the lines robustly
    cat << EOF >> /etc/bash.bashrc

# Added by Singularity build for automatic Conda environment activation
if [ -f "/opt/conda/etc/profile.d/conda.sh" ]; then
    . "/opt/conda/etc/profile.d/conda.sh"
    conda activate naam
else
    echo "WARNING: Conda setup script not found (/opt/conda/etc/profile.d/conda.sh)" >> /dev/stderr
fi
EOF
    # Note: The final 'EOF' MUST be at the beginning of the line with no spaces before it.

    echo "--- Contents of /etc/bash.bashrc after modification: ---"
    cat /etc/bash.bashrc
    echo "--- End of /etc/bash.bashrc content ---"

    echo "--- %post section completed ---"


# --- Keep the %environment section focused on PATH for exec/run ---
%environment
    # Define the environment's bin directory (for clarity)
    ENV_BIN_DIR="/opt/conda/envs/naam/bin"

    # Prepend the environment's bin directory to the PATH
    # This ensures tools from 'myenv' are found first.
    export PATH="${ENV_BIN_DIR}:${PATH}"

    # Optional: Handle LD_LIBRARY_PATH if needed
    # ENV_LIB_DIR="/opt/conda/envs/naam/lib"
    # export LD_LIBRARY_PATH="${ENV_LIB_DIR}:${LD_LIBRARY_PATH}"


# --- A dedicated runscript for version and help information ---
%runscript
    #!/bin/bash
    # This runscript is for informational purposes only.
    # The main tools are intended to be run via 'singularity exec'.

    # Check if the first argument is '--version'
    if [ "$1" = "--version" ]; then
        # If it is, print the version and exit.
        cat /NAAM_VERSION
        exit 0
    fi

    # If no valid flag is given, print a helpful usage message.
    # The $SINGULARITY_CONTAINER variable is automatically set by Singularity.
    echo "NAAM Workflow Container - Version: $(cat /NAAM_VERSION)"
    echo "----------------------------------------------------"
    echo "This container provides a two-step amplicon analysis workflow."
    echo
    echo "Usage:"
    echo "  singularity run $(basename $SINGULARITY_CONTAINER) --version    # To see this container's version"
    echo
    echo "Workflow Steps:"
    echo "  1. Prepare project directory:"
    echo "     singularity exec $(basename $SINGULARITY_CONTAINER) python /amplicon_project.py -p <project_dir> ..."
    echo
    echo "  2. Run the Snakemake workflow:"
    echo "     singularity exec $(basename $SINGULARITY_CONTAINER) snakemake --snakefile <project_dir>/Snakefile --cores <N>"
    echo